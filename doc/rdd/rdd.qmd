---
title: "Flexible covariate adjustments in RDD"

jupyter: python3
---


```{python}
#| echo: false

import numpy as np
import pandas as pd
from itables import init_notebook_mode
import os
import sys

doc_dir = os.path.abspath(os.path.join(os.getcwd(), ".."))
if doc_dir not in sys.path:
    sys.path.append(doc_dir)

from utils.style_tables import generate_and_show_styled_table

init_notebook_mode(all_interactive=True)
```

## Sharp Design

The simulations are based on the [make_simple_rdd_data](https://docs.doubleml.org/stable/api/generated/doubleml.rdd.datasets.make_simple_rdd_data.html#doubleml.rdd.datasets.make_simple_rdd_data)-DGP with $1000$ observations. The simulation considers data under a [sharp regression discontinuity design](https://docs.doubleml.org/stable/guide/models.html#sharp-regression-discontinuity-design).

::: {.callout-note title="Metadata"  collapse="true"}

```{python}
#| echo: false
metadata_file = '../../results/rdd/rdd_sharp_metadata.csv'
metadata_df = pd.read_csv(metadata_file)
print(metadata_df.T.to_string(header=False))
```

:::

```{python}
# | echo: false

# set up data and rename columns
df_sharp = pd.read_csv("../../results/rdd/rdd_sharp_coverage.csv", index_col=None)

assert df_sharp["repetition"].nunique() == 1
n_rep_sharp = df_sharp["repetition"].unique()[0]

display_columns_sharp = ["Method", "Learner g", "fs_specification", "Bias", "CI Length", "Coverage"]
```

```{python}
#| echo: false
generate_and_show_styled_table(
    main_df=df_sharp,
    filters={"level": 0.95},
    display_cols=display_columns_sharp,
    n_rep=n_rep_sharp,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

```{python}
#| echo: false
generate_and_show_styled_table(
    main_df=df_sharp,
    filters={"level": 0.9},
    display_cols=display_columns_sharp,
    n_rep=n_rep_sharp,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```


## Fuzzy Design

The simulations are based on the [make_simple_rdd_data](https://docs.doubleml.org/stable/api/generated/doubleml.rdd.datasets.make_simple_rdd_data.html#doubleml.rdd.datasets.make_simple_rdd_data)-DGP with $2000$ observations. The simulation considers data under a [fuzzy regression discontinuity design](https://docs.doubleml.org/stable/guide/models.html#fuzzy-regression-discontinuity-design).

::: {.callout-note title="Metadata"  collapse="true"}

```{python}
#| echo: false
metadata_file = '../../results/rdd/rdd_fuzzy_metadata.csv'
metadata_df = pd.read_csv(metadata_file)
print(metadata_df.T.to_string(header=False))
```

:::

```{python}
# | echo: false

# set up data and rename columns
df_fuzzy = pd.read_csv("../../results/rdd/rdd_fuzzy_coverage.csv", index_col=None)

assert df_fuzzy["repetition"].nunique() == 1
n_rep_fuzzy = df_fuzzy["repetition"].unique()[0]

display_columns_fuzzy = ["Method", "Learner g", "Learner m", "fs_specification", "Bias", "CI Length", "Coverage"]
```

```{python}
#| echo: false
generate_and_show_styled_table(
    main_df=df_fuzzy,
    filters={"level": 0.95},
    display_cols=display_columns_fuzzy,
    n_rep=n_rep_fuzzy,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

```{python}
#| echo: false
generate_and_show_styled_table(
    main_df=df_fuzzy,
    filters={"level": 0.9},
    display_cols=display_columns_fuzzy,
    n_rep=n_rep_fuzzy,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```
