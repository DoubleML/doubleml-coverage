---
title: "Quantile Models"

jupyter: python3
---
```{python}
#| echo: false

import numpy as np
import pandas as pd
from itables import init_notebook_mode
import os
import sys

doc_dir = os.path.abspath(os.path.join(os.getcwd(), ".."))
if doc_dir not in sys.path:
    sys.path.append(doc_dir)

from utils.style_tables import generate_and_show_styled_table

init_notebook_mode(all_interactive=True)
```

## QTE

The results are based on a location-scale model as described the corresponding [Example](https://docs.doubleml.org/stable/examples/py_double_ml_pq.html) with $5000$ observations.

The non-uniform results (coverage, ci length and bias) refer to averaged values over all quantiles (point-wise confidende intervals).

::: {.callout-note title="Metadata"  collapse="true"}

```{python}
#| echo: false
metadata_file = '../../results/irm/pq_coverage_metadata.csv'
metadata_df = pd.read_csv(metadata_file)
print(metadata_df.T.to_string(header=False))
```

:::

```{python}
#| echo: false

# set up data
df_qte = pd.read_csv("../../results/irm/pq_coverage_qte.csv", index_col=None)

assert df_qte["repetition"].nunique() == 1
n_rep_qte = df_qte["repetition"].unique()[0]

display_columns_qte = ["Learner g", "Learner m", "Bias", "CI Length", "Coverage", "Uniform CI Length", "Uniform Coverage"]
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_qte,
    filters={"level": 0.95},
    display_cols=display_columns_qte,
    n_rep=n_rep_qte,
    level_col="level",
    coverage_highlight_cols=["Coverage", "Uniform Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_qte,
    filters={"level": 0.9},
    display_cols=display_columns_qte,
    n_rep=n_rep_qte,
    level_col="level",
    coverage_highlight_cols=["Coverage", "Uniform Coverage"]
)
```

## Potential Quantiles


### Y(0) - Quantile

```{python}
#| echo: false

# set up data
df_pq0 = pd.read_csv("../../results/irm/pq_coverage_pq0.csv", index_col=None)

assert df_pq0["repetition"].nunique() == 1
n_rep_pq0 = df_pq0["repetition"].unique()[0]

display_columns_pq = ["Learner g", "Learner m", "Bias", "CI Length", "Coverage"]
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_pq0,
    filters={"level": 0.95},
    display_cols=display_columns_pq,
    n_rep=n_rep_pq0,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_pq0,
    filters={"level": 0.9},
    display_cols=display_columns_pq,
    n_rep=n_rep_pq0,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

### Y(1) - Quantile

```{python}
#| echo: false

# set up data and rename columns
df_pq1 = pd.read_csv("../../results/irm/pq_coverage_pq1.csv", index_col=None)

assert df_pq1["repetition"].nunique() == 1
n_rep_pq1 = df_pq1["repetition"].unique()[0]

# display_columns_pq is the same as for Y(0)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_pq1,
    filters={"level": 0.95},
    display_cols=display_columns_pq,
    n_rep=n_rep_pq1,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_pq1,
    filters={"level": 0.9},
    display_cols=display_columns_pq,
    n_rep=n_rep_pq1,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

## LQTE

The results are based on a location-scale model as described the corresponding [Example](https://docs.doubleml.org/stable/examples/py_double_ml_pq.html#Local-Potential-Quantiles-(LPQs)) with $10,000$ observations.

The non-uniform results (coverage, ci length and bias) refer to averaged values over all quantiles (point-wise confidende intervals).

::: {.callout-note title="Metadata"  collapse="true"}

```{python}
#| echo: false
metadata_file = '../../results/irm/lpq_coverage_metadata.csv'
metadata_df = pd.read_csv(metadata_file)
print(metadata_df.T.to_string(header=False))
```

:::

```{python}
#| echo: false

# set up data
df_lqte = pd.read_csv("../../results/irm/lpq_coverage_lqte.csv", index_col=None)

assert df_lqte["repetition"].nunique() == 1
n_rep_lqte = df_lqte["repetition"].unique()[0]

display_columns_lqte = ["Learner g", "Learner m", "Bias", "CI Length", "Coverage", "Uniform CI Length", "Uniform Coverage"]
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_lqte,
    filters={"level": 0.95},
    display_cols=display_columns_lqte,
    n_rep=n_rep_lqte,
    level_col="level",
    coverage_highlight_cols=["Coverage", "Uniform Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_lqte,
    filters={"level": 0.9},
    display_cols=display_columns_lqte,
    n_rep=n_rep_lqte,
    level_col="level",
    coverage_highlight_cols=["Coverage", "Uniform Coverage"]
)
```

## Local Potential Quantiles

### Local Y(0) - Quantile

```{python}
#| echo: false

# set up data
df_lpq0 = pd.read_csv("../../results/irm/lpq_coverage_lpq0.csv", index_col=None)

assert df_lpq0["repetition"].nunique() == 1
n_rep_lpq0 = df_lpq0["repetition"].unique()[0]

display_columns_lpq = ["Learner g", "Learner m", "Bias", "CI Length", "Coverage"]
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_lpq0,
    filters={"level": 0.95},
    display_cols=display_columns_lpq,
    n_rep=n_rep_lpq0,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_lpq0,
    filters={"level": 0.9},
    display_cols=display_columns_lpq,
    n_rep=n_rep_lpq0,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

### Local Y(1) - Quantile

```{python}
#| echo: false

# set up data
df_lpq1 = pd.read_csv("../../results/irm/lpq_coverage_lpq1.csv", index_col=None)

assert df_lpq1["repetition"].nunique() == 1
n_rep_lpq1 = df_lpq1["repetition"].unique()[0]

# display_columns_lpq is the same as for Local Y(0)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_lpq1,
    filters={"level": 0.95},
    display_cols=display_columns_lpq,
    n_rep=n_rep_lpq1,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_lpq1,
    filters={"level": 0.9},
    display_cols=display_columns_lpq,
    n_rep=n_rep_lpq1,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

## CVaR Effects

The results are based on a location-scale model as described the corresponding [Example](https://docs.doubleml.org/stable/examples/py_double_ml_cvar.html) with $5,000$ observations. Remark that the process is not linear.

The non-uniform results (coverage, ci length and bias) refer to averaged values over all quantiles (point-wise confidende intervals).

::: {.callout-note title="Metadata"  collapse="true"}

```{python}
#| echo: false
metadata_file = '../../results/irm/cvar_coverage_metadata.csv'
metadata_df = pd.read_csv(metadata_file)
print(metadata_df.T.to_string(header=False))
```

:::

```{python}
#| echo: false

# set up data
df_cvar_qte = pd.read_csv("../../results/irm/cvar_coverage_qte.csv", index_col=None)

assert df_cvar_qte["repetition"].nunique() == 1
n_rep_cvar_qte = df_cvar_qte["repetition"].unique()[0]

display_columns_cvar_qte = ["Learner g", "Learner m", "Bias", "CI Length", "Coverage", "Uniform CI Length", "Uniform Coverage"]
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_cvar_qte,
    filters={"level": 0.95},
    display_cols=display_columns_cvar_qte,
    n_rep=n_rep_cvar_qte,
    level_col="level",
    coverage_highlight_cols=["Coverage", "Uniform Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_cvar_qte,
    filters={"level": 0.9},
    display_cols=display_columns_cvar_qte,
    n_rep=n_rep_cvar_qte,
    level_col="level",
    coverage_highlight_cols=["Coverage", "Uniform Coverage"]
)
```

## CVaR Potential Quantiles

### CVaR Y(0)

```{python}
#| echo: false

# set up data
df_cvar_pq0 = pd.read_csv("../../results/irm/cvar_coverage_pq0.csv", index_col=None)

assert df_cvar_pq0["repetition"].nunique() == 1
n_rep_cvar_pq0 = df_cvar_pq0["repetition"].unique()[0]

display_columns_cvar_pq = ["Learner g", "Learner m", "Bias", "CI Length", "Coverage"]
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_cvar_pq0,
    filters={"level": 0.95},
    display_cols=display_columns_cvar_pq,
    n_rep=n_rep_cvar_pq0,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_cvar_pq0,
    filters={"level": 0.9},
    display_cols=display_columns_cvar_pq,
    n_rep=n_rep_cvar_pq0,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

### CVaR Y(1)

```{python}
#| echo: false

# set up data
df_cvar_pq1 = pd.read_csv("../../results/irm/cvar_coverage_pq1.csv", index_col=None)

assert df_cvar_pq1["repetition"].nunique() == 1
n_rep_cvar_pq1 = df_cvar_pq1["repetition"].unique()[0]

# display_columns_cvar_pq is the same as for CVaR Y(0)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_cvar_pq1,
    filters={"level": 0.95},
    display_cols=display_columns_cvar_pq,
    n_rep=n_rep_cvar_pq1,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```

```{python}
#| echo: false

generate_and_show_styled_table(
    main_df=df_cvar_pq1,
    filters={"level": 0.9},
    display_cols=display_columns_cvar_pq,
    n_rep=n_rep_cvar_pq1,
    level_col="level",
    coverage_highlight_cols=["Coverage"]
)
```
